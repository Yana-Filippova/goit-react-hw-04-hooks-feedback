{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Container/Container.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","section","defaultProps","FeedbackOptions","options","onLeaveFeedback","optionNames","Object","keys","btnList","map","optionName","item","button","name","onClick","Notification","message","notification","Statistics","good","neutral","bad","total","positivePercentage","list","input","feedback","Container","container","App","useState","setGood","setNeutral","setBad","countTotalFeedback","prevGood","prevNeutral","prevBad","console","log","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,SAAW,6BAA6B,MAAQ,0BAA0B,KAAO,2B,gBCArID,EAAOC,QAAU,CAAC,OAAS,gCAAgC,QAAU,iCAAiC,KAAO,gC,kBCA7GD,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,QAAU,2B,iBCA3DD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,UAAY,+B,8HCExBC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASC,UAAWC,IAAOC,QAA3B,UACE,oBAAIF,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,MAILF,EAAQM,aAAe,CACrBJ,SAAU,IAQGF,Q,gBCSAO,EAzBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAcC,OAAOC,KAAKJ,GAEhC,OACE,oBAAIL,UAAWC,IAAOS,QAAtB,SACGH,EAAYI,KAAI,SAAAC,GAAU,OACzB,oBAAIZ,UAAWC,IAAOY,KAAtB,SACE,wBACEb,UAAWC,IAAOa,OAClBC,KAAMH,EACNI,QAAS,kBAAMV,EAAgBM,IAHjC,SAKGA,KAN4BA,S,gCCE1BK,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGlB,UAAWC,IAAOkB,aAArB,SAAoCD,KC0BvBE,EA1BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,mCACGD,EACC,qBAAIxB,UAAWC,IAAOyB,KAAtB,UACE,qBAAI1B,UAAWC,IAAO0B,MAAtB,mBAAoCN,KACpC,qBAAIrB,UAAWC,IAAO0B,MAAtB,sBAAuCL,KACvC,qBAAItB,UAAWC,IAAO0B,MAAtB,kBAAmCJ,KACnC,qBAAIvB,UAAWC,IAAOuB,MAAtB,oBAAqCA,KACrC,qBAAIxB,UAAWC,IAAO2B,SAAtB,gCACsBH,EADtB,UAKF,cAAC,EAAD,CAAcP,QAAQ,yB,gBCLbW,EARG,SAAC,GAAD,IAAG9B,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAO6B,UAAvB,SAAmC/B,KCCtB,SAASgC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOX,EAAP,KAAaY,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOV,EAAP,KAAgBY,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOT,EAAP,KAAYY,EAAZ,KAEMP,EAAW,CAAEP,OAAMC,UAASC,OAkB5Ba,EAAqB,kBAAMf,EAAOC,EAAUC,GAMlD,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASzB,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBO,QAASuB,EAAUtB,gBAzBnB,SAAAsB,GACrB,OAAQA,GACN,IAAK,OACHK,GAAQ,SAAAI,GAAQ,OAAIA,EAAW,KAC/B,MACF,IAAK,UACHH,GAAW,SAAAI,GAAW,OAAIA,EAAc,KACxC,MACF,IAAK,MACHH,GAAO,SAAAI,GAAO,OAAIA,EAAU,KAC5B,MACF,QACEC,QAAQC,IAAI,+BAed,cAAC,EAAD,CAAS3C,MAAM,aAAf,SACE,cAAC,EAAD,CACEuB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOY,IACPX,mBAdCiB,KAAKC,MAAc,IAAPtB,EAAce,MAAyB,S,YC1B9DQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACf,EAAD,MAEFgB,SAASC,eAAe,W","file":"static/js/main.a2bbb5a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Statistics_input__1Xzi5\",\"feedback\":\"Statistics_feedback__fMDCz\",\"total\":\"Statistics_total__sf5Iw\",\"list\":\"Statistics_list__3Fe2O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2I4R_\",\"btnList\":\"FeedbackOptions_btnList__1T0_j\",\"item\":\"FeedbackOptions_item__3r6fo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__nogRM\",\"section\":\"Section_section__1Hfto\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2kMEo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3DGkD\"};","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section className={styles.section}>\n    <h1 className={styles.title}>{title}</h1>\n    {children}\n  </section>\n);\n\nSection.defaultProps = {\n  children: [],\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const optionNames = Object.keys(options);\n\n  return (\n    <ul className={styles.btnList}>\n      {optionNames.map(optionName => (\n        <li className={styles.item} key={optionName}>\n          <button\n            className={styles.button}\n            name={optionName}\n            onClick={() => onLeaveFeedback(optionName)}\n          >\n            {optionName}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.objectOf(PropTypes.number.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n  <p className={styles.notification}>{message}</p>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\nimport Notification from '../Notification';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    {total ? (\n      <ul className={styles.list}>\n        <li className={styles.input}>Good: {good}</li>\n        <li className={styles.input}>Neutral: {neutral}</li>\n        <li className={styles.input}>Bad: {bad}</li>\n        <li className={styles.total}>Total: {total}</li>\n        <li className={styles.feedback}>\n          Positive feedback: {positivePercentage}%\n        </li>\n      </ul>\n    ) : (\n      <Notification message=\"No feedback given\" />\n    )}\n  </>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\n\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { useState } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Container from './components/Container';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const feedback = { good, neutral, bad };\n\n  const handleFeedback = feedback => {\n    switch (feedback) {\n      case 'good':\n        setGood(prevGood => prevGood + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevNeutral => prevNeutral + 1);\n        break;\n      case 'bad':\n        setBad(prevBad => prevBad + 1);\n        break;\n      default:\n        console.log('Invalid feedback type');\n    }\n  };\n\n  const countTotalFeedback = () => good + neutral + bad;\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good * 100) / countTotalFeedback()) || 0;\n  };\n\n  return (\n    <Container>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={feedback} onLeaveFeedback={handleFeedback} />\n      </Section>\n      <Section title=\"Statistics\">\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positivePercentage={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    </Container>\n  );\n}\n\n// Class usage\n// class App extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n\n//   handleFeedback = optionName => {\n//     this.setState(prevState => {\n//       return { [optionName]: prevState[optionName] + 1 };\n//     });\n//   };\n\n//   countTotalFeedback = () => {\n//     const { good, neutral, bad } = this.state;\n//     return good + neutral + bad;\n//   };\n\n//   countPositiveFeedbackPercentage = () => {\n//     const { good } = this.state;\n//     const total = this.countTotalFeedback();\n//     return total ? Math.round((good * 100) / this.countTotalFeedback()) : 0;\n//   };\n\n//   render() {\n//     const { good, neutral, bad } = this.state;\n//     const total = this.countTotalFeedback();\n//     const positivePercentage = this.countPositiveFeedbackPercentage();\n\n//     return (\n//       <Container>\n//         <Section title=\"Please leave feedback\">\n//           <FeedbackOptions\n//             options={this.state}\n//             onLeaveFeedback={this.handleFeedback}\n//           />\n//         </Section>\n\n//         <Section title=\"Statistics\">\n//           <Statistics\n//             good={good}\n//             neutral={neutral}\n//             bad={bad}\n//             total={total}\n//             positivePercentage={positivePercentage}\n//           />\n//         </Section>\n//       </Container>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}